/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.hyperledger.besu.secp256r1.demo;

import org.apache.logging.slf4j.Log4jLoggerFactory;
import org.hyperledger.besu.secp256r1.demo.Web3jNist.NistTransactionManager;
import org.hyperledger.besu.secp256r1.demo.contract.DemoErc20;
import org.slf4j.Logger;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.http.HttpService;
import org.web3j.tx.gas.DefaultGasProvider;

import java.io.Console;

public class App {
    static Logger LOG = new Log4jLoggerFactory().getLogger("SECP256R1-DEMO");

    public static void main(String[] args) throws Exception {

        Credentials owner = Credentials.create(
                "04d88a793a5df3c0b3d8ef17a955f430d75353fb2e3d0298b812b493603d9db8",
                "f29a2cb1c3c94e5eddb4f8c66487cbf7ca06c2de3f1fb9df25db82565a4df91e7c67b31c22724dc4602032cf21c45bfe5e276e213b1bc3bab15572539239cb42");

        LOG.error("Owner address: " + owner.getAddress());

        waitForUserInput();

        Web3j web3j = Web3j.build(new HttpService("http://127.0.0.1:8545"));
        NistTransactionManager transactionManager = new NistTransactionManager(web3j, owner);

        DemoErc20 erc20 = DemoErc20.deploy(web3j, transactionManager, new DefaultGasProvider()).send();

        LOG.error("Contract deployed at " +  erc20.getContractAddress());

        waitForUserInput();

        LOG.error("Contract deployed tx id " +  erc20.getTransactionReceipt().get().getTransactionHash());

        waitForUserInput();
    }

    private static void waitForUserInput() {
        Console console = System.console();

        if (console == null) {
            // does not work when started with gradle
            return;
        }


        console.format("\nPress ENTER to proceed.\n");
        console.readLine();
    }
}
